# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregatePost {
  _avg: PostAvgAggregate
  _count: PostCountAggregate
  _max: PostMaxAggregate
  _min: PostMinAggregate
  _sum: PostSumAggregate
}

type Author {
  _count: AuthorCount
  firstName: String!
  id: Int!
  lastName: String!
}

type AuthorCount {
  posts: Int!
}

input AuthorCreateNestedOneWithoutPostsInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutPostsInput
  create: AuthorCreateWithoutPostsInput
}

input AuthorCreateOrConnectWithoutPostsInput {
  create: AuthorCreateWithoutPostsInput!
  where: AuthorWhereUniqueInput!
}

input AuthorCreateWithoutPostsInput {
  firstName: String!
  lastName: String!
}

input AuthorOrderByWithRelationInput {
  firstName: SortOrder
  id: SortOrder
  lastName: SortOrder
  posts: PostOrderByRelationAggregateInput
}

input AuthorRelationFilter {
  is: AuthorWhereInput
  isNot: AuthorWhereInput
}

input AuthorUpdateOneRequiredWithoutPostsNestedInput {
  connect: AuthorWhereUniqueInput
  connectOrCreate: AuthorCreateOrConnectWithoutPostsInput
  create: AuthorCreateWithoutPostsInput
  update: AuthorUpdateWithoutPostsInput
  upsert: AuthorUpsertWithoutPostsInput
}

input AuthorUpdateWithoutPostsInput {
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
}

input AuthorUpsertWithoutPostsInput {
  create: AuthorCreateWithoutPostsInput!
  update: AuthorUpdateWithoutPostsInput!
}

input AuthorWhereInput {
  AND: [AuthorWhereInput!]
  NOT: [AuthorWhereInput!]
  OR: [AuthorWhereInput!]
  firstName: StringFilter
  id: IntFilter
  lastName: StringFilter
  posts: PostListRelationFilter
}

input AuthorWhereUniqueInput {
  id: Int
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Mutation {
  createPost(data: PostCreateInput!): Post
  deleteManyPost(where: PostWhereInput): AffectedRowsOutput
  deletePost(where: PostWhereUniqueInput!): Post
  updateManyPost(data: PostUpdateManyMutationInput!, where: PostWhereInput): AffectedRowsOutput
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  upsertPost(create: PostCreateInput!, update: PostUpdateInput!, where: PostWhereUniqueInput!): Post
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Post {
  author: Author!
  authorId: Int!
  computedTitle: String!
  id: Int!
  published: Boolean!
  title: String!
  votes: Int!
}

type PostAvgAggregate {
  authorId: Float
  id: Float
  votes: Float
}

input PostAvgOrderByAggregateInput {
  authorId: SortOrder
  id: SortOrder
  votes: SortOrder
}

type PostCountAggregate {
  _all: Int!
  authorId: Int!
  id: Int!
  published: Int!
  title: Int!
  votes: Int!
}

input PostCountOrderByAggregateInput {
  authorId: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  votes: SortOrder
}

input PostCreateInput {
  author: AuthorCreateNestedOneWithoutPostsInput!
  published: Boolean
  title: String!
  votes: Int!
}

type PostGroupBy {
  _avg: PostAvgAggregate
  _count: PostCountAggregate
  _max: PostMaxAggregate
  _min: PostMinAggregate
  _sum: PostSumAggregate
  authorId: Int!
  id: Int!
  published: Boolean!
  title: String!
  votes: Int!
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

type PostMaxAggregate {
  authorId: Int
  id: Int
  published: Boolean
  title: String
  votes: Int
}

input PostMaxOrderByAggregateInput {
  authorId: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  votes: SortOrder
}

type PostMinAggregate {
  authorId: Int
  id: Int
  published: Boolean
  title: String
  votes: Int
}

input PostMinOrderByAggregateInput {
  authorId: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  votes: SortOrder
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

input PostOrderByWithAggregationInput {
  _avg: PostAvgOrderByAggregateInput
  _count: PostCountOrderByAggregateInput
  _max: PostMaxOrderByAggregateInput
  _min: PostMinOrderByAggregateInput
  _sum: PostSumOrderByAggregateInput
  authorId: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  votes: SortOrder
}

input PostOrderByWithRelationInput {
  author: AuthorOrderByWithRelationInput
  authorId: SortOrder
  id: SortOrder
  published: SortOrder
  title: SortOrder
  votes: SortOrder
}

enum PostScalarFieldEnum {
  authorId
  id
  published
  title
  votes
}

input PostScalarWhereWithAggregatesInput {
  AND: [PostScalarWhereWithAggregatesInput!]
  NOT: [PostScalarWhereWithAggregatesInput!]
  OR: [PostScalarWhereWithAggregatesInput!]
  authorId: IntWithAggregatesFilter
  id: IntWithAggregatesFilter
  published: BoolWithAggregatesFilter
  title: StringWithAggregatesFilter
  votes: IntWithAggregatesFilter
}

type PostSumAggregate {
  authorId: Int
  id: Int
  votes: Int
}

input PostSumOrderByAggregateInput {
  authorId: SortOrder
  id: SortOrder
  votes: SortOrder
}

input PostUpdateInput {
  author: AuthorUpdateOneRequiredWithoutPostsNestedInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  votes: IntFieldUpdateOperationsInput
}

input PostUpdateManyMutationInput {
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  votes: IntFieldUpdateOperationsInput
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  author: AuthorRelationFilter
  authorId: IntFilter
  id: IntFilter
  published: BoolFilter
  title: StringFilter
  votes: IntFilter
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  aggregatePost(cursor: PostWhereUniqueInput, orderBy: [PostOrderByWithRelationInput!], skip: Int, take: Int, where: PostWhereInput): AggregatePost!
  findFirstPost(cursor: PostWhereUniqueInput, distinct: [PostScalarFieldEnum!], orderBy: [PostOrderByWithRelationInput!], skip: Int, take: Int, where: PostWhereInput): Post!
  findManyPost(cursor: PostWhereUniqueInput, distinct: [PostScalarFieldEnum!], orderBy: [PostOrderByWithRelationInput!], skip: Int, take: Int, where: PostWhereInput): [Post!]!
  findUniquePost(where: PostWhereUniqueInput!): Post!
  groupByPost(by: [PostScalarFieldEnum!]!, having: PostScalarWhereWithAggregatesInput, orderBy: [PostOrderByWithAggregationInput!], skip: Int, take: Int, where: PostWhereInput): [PostGroupBy!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}